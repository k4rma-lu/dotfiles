# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh

source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt histignorealldups sharehistory

# Created by newuser for 5.8
source ~/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
source ~/powerlevel10k/powerlevel10k.zsh-theme

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


## aliases
# listar
alias l='lsd --group-dirs=first'
alias ls='lsd --group-dirs=first'
alias la='lsd -a --group-dirs=first'
alias ll='lsd -lh --group-dirs=first'
alias lla='lsd -lha --group-dirs=first'
alias lc='ls -1'
alias lca='la -1'

# mover
alias mvl='mv $(ls | fzf -m) ~/Descargas/revisar'

# preview
alias cat='/bin/bat'
alias catn='/bin/cat'
alias catnl='/bin/bat --paging=never'
function catl(){
	cat "$(find -type f | fzf)"
}

# remove
alias rml='rm -rf $(ls | fzf -m)'
function rmk(){
	scrub -p dod $1
	shred -zun 10 -v $1
}

# neovim
alias v='/home/linuxbrew/.linuxbrew/bin/nvim'
function V(){
	v "$(find -type f | fzf)"
}
function vv(){
	v "$(fzf)"
}
function vl(){
	v "$(fl)"
}
# ubicaciones
alias a="v ~/Documentos/nota.txt"

# server
alias dbi='sudo /opt/lampp/lampp start'
alias dbo='sudo /opt/lampp/lampp stop'
alias lsv='live-server --port=8000 --browser=google-chrome'
alias server.='sudo rm /opt/lampp/htdocs/dev 2> /dev/null ; sudo ln -s $(pwd) /opt/lampp/htdocs/dev;'

alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias q='exit'
alias t='tmux'
alias brewinit='source ~/.profile'
alias so='source'

plugins=(vi-mode)


alias actualizar='sudo apt update; sudo apt-get update; sudo parrot-upgrade; sudo apt update'

alias cpll='g++ -o ejecutable'
function cpp(){
    g++ -o ejecutable $1
}
function cpc(){
    gcc $1 -o ejecutable
}

alias d='cd; cd "$(find -type d | fzf)"'
function fcd(){
	cd "$(find -type d | fzf)"
}
function open(){
	xdg-open "$(cd; find -type f | fzf)"
}
alias sz='source ~/.zshrc'

# sistema
alias gp="find -type f | fzf | sed 's/^..//' | tr -d '\n' | xclip -selection c"
alias xp="xprop WM_CLASS"

function bg(){
  rm ~/Imágenes/Wallpaper/w.jpg 2> /dev/null ;
  cp ~/Imágenes/Wallpaper/$1.jpg 2> /dev/null ~/Imágenes/Wallpaper/w.jpg ;
  bspc wm -r
}

function create(){
  mkdir $1 ; cd $1;
  cp ~/.nirvana/recursos/ReactNativePlantilla/*.* 2> /dev/null "$(pwd)";
  ln -s ~/.nirvana/ReactNative/assets .; ln -s ~/.nirvana/ReactNative/node_modules .;
  clear;
  ls
}

# modo vi en zsh
#set -o vi
# modo vi
bindkey -v
bindkey 'ii' vi-cmd-mode
# bindkey -s "^v" "hola mundo"
# bindkey -s "^h" "^p"

# Functions
function treec(){
	tree $2 $1 | cat
}

# Functions
function mkt(){
	mkdir {nmap,content,exploits,scripts}
}

# Extract nmap information
function extractPorts(){
	ports="$(cat $1 | grep -oP '\d{1,5}/open' | awk '{print $1}' FS='/' | xargs | tr ' ' ',')"
	ip_address="$(cat $1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | head -n 1)"
	echo -e "\n[*] Extracting information...\n" > extractPorts.tmp
	echo -e "\t[*] IP Address: $ip_address"  >> extractPorts.tmp
	echo -e "\t[*] Open ports: $ports\n"  >> extractPorts.tmp
	echo $ports | tr -d '\n' | xclip -sel clip
	echo -e "[*] Ports copied to clipboard\n"  >> extractPorts.tmp
	cat extractPorts.tmp; rm extractPorts.tmp
}

# Set 'man' colors
function man() {
    env \
    LESS_TERMCAP_mb=$'\e[01;31m' \
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    man "$@"
}

# fzf improvement
function fl(){

	if [ "$1" = "h" ]; then
		fzf -m --reverse --preview-window down:20 --preview '[[ $(file --mime {}) =~ binary ]] &&
 	                echo {} is a binary file ||
	                 (bat --style=numbers --color=always {} ||
	                  highlight -O ansi -l {} ||
	                  coderay {} ||
	                  rougify {} ||
	                  cat {}) 2> /dev/null | head -500'

	else
	        fzf -m --preview '[[ $(file --mime {}) =~ binary ]] &&
	                         echo {} is a binary file ||
	                         (bat --style=numbers --color=always {} ||
	                          highlight -O ansi -l {} ||
	                          coderay {} ||
	                          rougify {} ||
	                          cat {}) 2> /dev/null | head -500'
	fi
}
